{
  "swagger": "2.0",
  "info": {
    "title": "Broadage API",
    "description": "This document describes the `BroadageService` service and all its corresponding RPCs.",
    "version": "1.0.0",
    "contact": {
      "name": "NBN23",
      "url": "https://github.com/NBN23dev/proto-broadage",
      "email": "develop@nbn23.com"
    }
  },
  "tags": [
    {
      "name": "BroadageService"
    }
  ],
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/match/{matchFid}/playbyplay": {
      "get": {
        "operationId": "BroadageService_GetPlayByPlay",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetPlayByPlayResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "matchFid",
            "description": "/ Id is the unique identifier of the match.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "BroadageService"
        ]
      }
    },
    "/v1/match/{matchFid}/players": {
      "get": {
        "operationId": "BroadageService_GetMatchPlayers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMatchPlayersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "matchFid",
            "description": "/ Id is the unique identifier of the match.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "BroadageService"
        ]
      }
    },
    "/v1/matches/live": {
      "get": {
        "operationId": "BroadageService_GetLiveMatches",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetLiveMatchesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BroadageService"
        ]
      }
    },
    "/v1/teams/{teamFid}/players": {
      "get": {
        "operationId": "BroadageService_GetTeamPlayers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetTeamPlayersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "teamFid",
            "description": "/ Id is the unique identifier of the team.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "BroadageService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1EventCode": {
      "type": "string",
      "enum": [
        "EVENT_CODE_UNSPECIFIED",
        "EVENT_CODE_SOM",
        "EVENT_CODE_EOM",
        "EVENT_CODE_SOQ",
        "EVENT_CODE_EOQ"
      ],
      "default": "EVENT_CODE_UNSPECIFIED",
      "description": "EventCode represents the type of event in a match.\n\n - EVENT_CODE_UNSPECIFIED: UNSPECIFIED represents an unspecified event.\n - EVENT_CODE_SOM: SOM represents the start of the match.\n - EVENT_CODE_EOM: EOM represents the end of the match.\n - EVENT_CODE_SOQ: SOQ represents the start of a quarter.\n - EVENT_CODE_EOQ: EOQ represents the end of a quarter."
    },
    "v1GetLiveMatchesResponse": {
      "type": "object",
      "properties": {
        "matches": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MatchKey"
          },
          "description": "/ Matches is the list of live matches."
        }
      },
      "description": "/ GetLiveMatchesResponse represents the response to get the live matches."
    },
    "v1GetMatchPlayersResponse": {
      "type": "object",
      "properties": {
        "homeTeamPlayers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MatchPlayer"
          },
          "description": "/ players are the players of the match."
        },
        "awayTeamPlayers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MatchPlayer"
          },
          "description": "/ players are the players of the match."
        }
      },
      "description": "/ GetMatchPlayersResponse represents the response to get the box score of a match."
    },
    "v1GetPlayByPlayResponse": {
      "type": "object",
      "properties": {
        "actions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MatchEvent"
          },
          "description": "/ PlayByPlay is the play by play of the match."
        },
        "events": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1MatchEvent"
          },
          "description": "/ Events is the events of the match."
        }
      },
      "description": "/ GetPlayByPlayResponse represents the response to get the play by play of a match."
    },
    "v1GetTeamPlayersResponse": {
      "type": "object",
      "properties": {
        "players": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1TeamPlayer"
          },
          "description": "/ Players is the list of players from the team."
        }
      },
      "description": "/ GetPlayersFromTeamResponse represents the response to get the players from a team."
    },
    "v1MatchEvent": {
      "type": "object",
      "properties": {
        "fid": {
          "type": "string",
          "description": "The unique identifier for the event."
        },
        "period": {
          "type": "integer",
          "format": "int32",
          "description": "period represents the period of the match when the event occurred."
        },
        "time": {
          "type": "integer",
          "format": "int32",
          "description": "time is the time when the event occurred."
        },
        "code": {
          "$ref": "#/definitions/v1EventCode",
          "description": "The code representing the event."
        }
      },
      "description": "Represents an event."
    },
    "v1MatchKey": {
      "type": "object",
      "properties": {
        "competitionFid": {
          "type": "string",
          "description": "/ competition_fid is the unique id of the competition."
        },
        "fid": {
          "type": "string",
          "description": "/ fid is the unique id of the match."
        }
      },
      "description": "/ MatchKey represents the key of a match."
    },
    "v1MatchPlayer": {
      "type": "object",
      "properties": {
        "fid": {
          "type": "string",
          "description": "The unique identifier of the player."
        },
        "number": {
          "type": "string",
          "description": "The player's number."
        },
        "start": {
          "type": "boolean",
          "description": "Indicates if the player is starting the match."
        },
        "captain": {
          "type": "boolean",
          "description": "Indicates if the player is the captain of the team."
        }
      },
      "description": "Represents a player."
    },
    "v1TeamPlayer": {
      "type": "object",
      "properties": {
        "fid": {
          "type": "string",
          "description": "/ fid is the unique id of the player."
        },
        "name": {
          "type": "string",
          "description": "/ name is the first name of the player."
        },
        "surname": {
          "type": "string",
          "description": "/ surname is the last name of the player."
        },
        "lastName": {
          "type": "string",
          "description": "/ last_name is the last name of the player."
        },
        "number": {
          "type": "integer",
          "format": "int32",
          "description": "/ number is the number of the player."
        },
        "license": {
          "type": "string",
          "description": "/ license is the license of the player."
        }
      },
      "description": "/ Player represents a player in a game."
    }
  }
}

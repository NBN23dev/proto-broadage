// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: api/proto/v1/proto_broadage.proto

// This document describes the `BroadageService` service and all its corresponding RPCs.

package _go

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// EventCode represents the type of event in a match.
type EventCode int32

const (
	// UNSPECIFIED represents an unspecified event.
	EventCode_EVENT_CODE_UNSPECIFIED EventCode = 0
	// SOM represents the start of the match.
	EventCode_EVENT_CODE_SOM EventCode = 1
	// EOM represents the end of the match.
	EventCode_EVENT_CODE_EOM EventCode = 2
	// SOQ represents the start of a quarter.
	EventCode_EVENT_CODE_SOQ EventCode = 3
	// EOQ represents the end of a quarter.
	EventCode_EVENT_CODE_EOQ EventCode = 4
)

// Enum value maps for EventCode.
var (
	EventCode_name = map[int32]string{
		0: "EVENT_CODE_UNSPECIFIED",
		1: "EVENT_CODE_SOM",
		2: "EVENT_CODE_EOM",
		3: "EVENT_CODE_SOQ",
		4: "EVENT_CODE_EOQ",
	}
	EventCode_value = map[string]int32{
		"EVENT_CODE_UNSPECIFIED": 0,
		"EVENT_CODE_SOM":         1,
		"EVENT_CODE_EOM":         2,
		"EVENT_CODE_SOQ":         3,
		"EVENT_CODE_EOQ":         4,
	}
)

func (x EventCode) Enum() *EventCode {
	p := new(EventCode)
	*p = x
	return p
}

func (x EventCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventCode) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_v1_proto_broadage_proto_enumTypes[0].Descriptor()
}

func (EventCode) Type() protoreflect.EnumType {
	return &file_api_proto_v1_proto_broadage_proto_enumTypes[0]
}

func (x EventCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventCode.Descriptor instead.
func (EventCode) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_v1_proto_broadage_proto_rawDescGZIP(), []int{0}
}

// SUB_CODE represents the sub-code of an action in a match.
type ActionSubcode int32

const (
	// UNSPECIFIED represents an unspecified sub-code.
	ActionSubcode_ACTION_SUBCODE_UNSPECIFIED ActionSubcode = 0
	// IN_ARC represents an action inside the arc.
	ActionSubcode_ACTION_SUBCODE_IN_ARC ActionSubcode = 1
	// OUT_ARC represents an action outside the arc.
	ActionSubcode_ACTION_SUBCODE_OUT_ARC ActionSubcode = 2
	// FREE_THROW represents a free throw action.
	ActionSubcode_ACTION_SUBCODE_FREE_THROW ActionSubcode = 3
	// DUNK represents a dunk action.
	ActionSubcode_ACTION_SUBCODE_DUNK ActionSubcode = 4
	// OFFENSIVE_REBOUND represents an offensive rebound action.
	ActionSubcode_ACTION_SUBCODE_OFFENSIVE_REBOUND ActionSubcode = 5
	// DEFENSIVE_REBOUND represents a defensive rebound action.
	ActionSubcode_ACTION_SUBCODE_DEFENSIVE_REBOUND ActionSubcode = 6
	// RECEIVE_BLOCK represents a block received action.
	ActionSubcode_ACTION_SUBCODE_RECEIVE_BLOCK ActionSubcode = 7
	// RECEIVE_FOUL represents a foul received action.
	ActionSubcode_ACTION_SUBCODE_RECEIVE_FOUL ActionSubcode = 8
	// TECHNICAL represents a technical foul action.
	ActionSubcode_ACTION_SUBCODE_TECHNICAL ActionSubcode = 9
	// UNSPORTSMANLIKE represents an unsportsmanlike foul action.
	ActionSubcode_ACTION_SUBCODE_UNSPORTSMANLIKE ActionSubcode = 10
	// DISQUALIFYING represents a disqualifying foul action.
	ActionSubcode_ACTION_SUBCODE_DISQUALIFYING ActionSubcode = 11
	// BRAWL represents a brawl action.
	ActionSubcode_ACTION_SUBCODE_BRAWL ActionSubcode = 12
	// SWAP_IN represents a swap in action.
	ActionSubcode_ACTION_SUBCODE_SWAP_IN ActionSubcode = 13
	// SWAP_OUT represents a swap out action.
	ActionSubcode_ACTION_SUBCODE_SWAP_OUT ActionSubcode = 14
)

// Enum value maps for ActionSubcode.
var (
	ActionSubcode_name = map[int32]string{
		0:  "ACTION_SUBCODE_UNSPECIFIED",
		1:  "ACTION_SUBCODE_IN_ARC",
		2:  "ACTION_SUBCODE_OUT_ARC",
		3:  "ACTION_SUBCODE_FREE_THROW",
		4:  "ACTION_SUBCODE_DUNK",
		5:  "ACTION_SUBCODE_OFFENSIVE_REBOUND",
		6:  "ACTION_SUBCODE_DEFENSIVE_REBOUND",
		7:  "ACTION_SUBCODE_RECEIVE_BLOCK",
		8:  "ACTION_SUBCODE_RECEIVE_FOUL",
		9:  "ACTION_SUBCODE_TECHNICAL",
		10: "ACTION_SUBCODE_UNSPORTSMANLIKE",
		11: "ACTION_SUBCODE_DISQUALIFYING",
		12: "ACTION_SUBCODE_BRAWL",
		13: "ACTION_SUBCODE_SWAP_IN",
		14: "ACTION_SUBCODE_SWAP_OUT",
	}
	ActionSubcode_value = map[string]int32{
		"ACTION_SUBCODE_UNSPECIFIED":       0,
		"ACTION_SUBCODE_IN_ARC":            1,
		"ACTION_SUBCODE_OUT_ARC":           2,
		"ACTION_SUBCODE_FREE_THROW":        3,
		"ACTION_SUBCODE_DUNK":              4,
		"ACTION_SUBCODE_OFFENSIVE_REBOUND": 5,
		"ACTION_SUBCODE_DEFENSIVE_REBOUND": 6,
		"ACTION_SUBCODE_RECEIVE_BLOCK":     7,
		"ACTION_SUBCODE_RECEIVE_FOUL":      8,
		"ACTION_SUBCODE_TECHNICAL":         9,
		"ACTION_SUBCODE_UNSPORTSMANLIKE":   10,
		"ACTION_SUBCODE_DISQUALIFYING":     11,
		"ACTION_SUBCODE_BRAWL":             12,
		"ACTION_SUBCODE_SWAP_IN":           13,
		"ACTION_SUBCODE_SWAP_OUT":          14,
	}
)

func (x ActionSubcode) Enum() *ActionSubcode {
	p := new(ActionSubcode)
	*p = x
	return p
}

func (x ActionSubcode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionSubcode) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_v1_proto_broadage_proto_enumTypes[1].Descriptor()
}

func (ActionSubcode) Type() protoreflect.EnumType {
	return &file_api_proto_v1_proto_broadage_proto_enumTypes[1]
}

func (x ActionSubcode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionSubcode.Descriptor instead.
func (ActionSubcode) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_v1_proto_broadage_proto_rawDescGZIP(), []int{1}
}

// CODE represents the code of an action in a match.
type ActionCode int32

const (
	// ACTION_CODE_UNSPECIFIED represents an unspecified action.
	ActionCode_ACTION_CODE_UNSPECIFIED ActionCode = 0
	// ACTION_CODE_POINTS represents a points action.
	ActionCode_ACTION_CODE_POINTS ActionCode = 1
	// ACTION_CODE_FOUL represents a foul action.
	ActionCode_ACTION_CODE_FOUL ActionCode = 2
	// ACTION_CODE_RECEIVE represents a receive action.
	ActionCode_ACTION_CODE_RECEIVE ActionCode = 3
	// ACTION_CODE_REBOUND represents a rebound action.
	ActionCode_ACTION_CODE_REBOUND ActionCode = 4
	// ACTION_CODE_ASSIST represents an assist action.
	ActionCode_ACTION_CODE_ASSIST ActionCode = 5
	// ACTION_CODE_TURNOVER represents a turnover action.
	ActionCode_ACTION_CODE_TURNOVER ActionCode = 6
	// ACTION_CODE_STEAL represents a steal action.
	ActionCode_ACTION_CODE_STEAL ActionCode = 7
	// ACTION_CODE_BLOCK represents a block action.
	ActionCode_ACTION_CODE_BLOCK ActionCode = 8
	// ACTION_CODE_SWAP represents a swap action.
	ActionCode_ACTION_CODE_SWAP ActionCode = 9
	// ACTION_CODE_TIMEOUT represents a timeout action.
	ActionCode_ACTION_CODE_TIMEOUT ActionCode = 10
)

// Enum value maps for ActionCode.
var (
	ActionCode_name = map[int32]string{
		0:  "ACTION_CODE_UNSPECIFIED",
		1:  "ACTION_CODE_POINTS",
		2:  "ACTION_CODE_FOUL",
		3:  "ACTION_CODE_RECEIVE",
		4:  "ACTION_CODE_REBOUND",
		5:  "ACTION_CODE_ASSIST",
		6:  "ACTION_CODE_TURNOVER",
		7:  "ACTION_CODE_STEAL",
		8:  "ACTION_CODE_BLOCK",
		9:  "ACTION_CODE_SWAP",
		10: "ACTION_CODE_TIMEOUT",
	}
	ActionCode_value = map[string]int32{
		"ACTION_CODE_UNSPECIFIED": 0,
		"ACTION_CODE_POINTS":      1,
		"ACTION_CODE_FOUL":        2,
		"ACTION_CODE_RECEIVE":     3,
		"ACTION_CODE_REBOUND":     4,
		"ACTION_CODE_ASSIST":      5,
		"ACTION_CODE_TURNOVER":    6,
		"ACTION_CODE_STEAL":       7,
		"ACTION_CODE_BLOCK":       8,
		"ACTION_CODE_SWAP":        9,
		"ACTION_CODE_TIMEOUT":     10,
	}
)

func (x ActionCode) Enum() *ActionCode {
	p := new(ActionCode)
	*p = x
	return p
}

func (x ActionCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionCode) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_v1_proto_broadage_proto_enumTypes[2].Descriptor()
}

func (ActionCode) Type() protoreflect.EnumType {
	return &file_api_proto_v1_proto_broadage_proto_enumTypes[2]
}

func (x ActionCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionCode.Descriptor instead.
func (ActionCode) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_v1_proto_broadage_proto_rawDescGZIP(), []int{2}
}

// Actor represents the type of Actor in a match.
type ActorType int32

const (
	// UNSPECIFIED represents an unspecified actor type.
	ActorType_ACTOR_TYPE_UNSPECIFIED ActorType = 0
	// PLAYER represents a player in the match.
	ActorType_ACTOR_TYPE_PLAYER ActorType = 1
	// TEAM represents a team in the match.
	ActorType_ACTOR_TYPE_TEAM ActorType = 2
	// COACH represents a coach in the match.
	ActorType_ACTOR_TYPE_COACH ActorType = 3
)

// Enum value maps for ActorType.
var (
	ActorType_name = map[int32]string{
		0: "ACTOR_TYPE_UNSPECIFIED",
		1: "ACTOR_TYPE_PLAYER",
		2: "ACTOR_TYPE_TEAM",
		3: "ACTOR_TYPE_COACH",
	}
	ActorType_value = map[string]int32{
		"ACTOR_TYPE_UNSPECIFIED": 0,
		"ACTOR_TYPE_PLAYER":      1,
		"ACTOR_TYPE_TEAM":        2,
		"ACTOR_TYPE_COACH":       3,
	}
)

func (x ActorType) Enum() *ActorType {
	p := new(ActorType)
	*p = x
	return p
}

func (x ActorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActorType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_v1_proto_broadage_proto_enumTypes[3].Descriptor()
}

func (ActorType) Type() protoreflect.EnumType {
	return &file_api_proto_v1_proto_broadage_proto_enumTypes[3]
}

func (x ActorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActorType.Descriptor instead.
func (ActorType) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_v1_proto_broadage_proto_rawDescGZIP(), []int{3}
}

// / GetLiveMatchesRequest represents the request to get the live matches.
type GetLiveMatchesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetLiveMatchesRequest) Reset() {
	*x = GetLiveMatchesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_proto_broadage_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLiveMatchesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLiveMatchesRequest) ProtoMessage() {}

func (x *GetLiveMatchesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_proto_broadage_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLiveMatchesRequest.ProtoReflect.Descriptor instead.
func (*GetLiveMatchesRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_proto_broadage_proto_rawDescGZIP(), []int{0}
}

// / GetLiveMatchesResponse represents the response to get the live matches.
type GetLiveMatchesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// / Matches is the list of live matches.
	Matches []*MatchKey `protobuf:"bytes,1,rep,name=matches,proto3" json:"matches,omitempty"`
}

func (x *GetLiveMatchesResponse) Reset() {
	*x = GetLiveMatchesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_proto_broadage_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLiveMatchesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLiveMatchesResponse) ProtoMessage() {}

func (x *GetLiveMatchesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_proto_broadage_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLiveMatchesResponse.ProtoReflect.Descriptor instead.
func (*GetLiveMatchesResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_proto_broadage_proto_rawDescGZIP(), []int{1}
}

func (x *GetLiveMatchesResponse) GetMatches() []*MatchKey {
	if x != nil {
		return x.Matches
	}
	return nil
}

// / MatchKey represents the key of a match.
type MatchKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// / competition_fid is the unique id of the competition.
	CompetitionFid string `protobuf:"bytes,1,opt,name=competition_fid,json=competitionFid,proto3" json:"competition_fid,omitempty"`
	// / fid is the unique id of the match.
	Fid string `protobuf:"bytes,2,opt,name=fid,proto3" json:"fid,omitempty"`
}

func (x *MatchKey) Reset() {
	*x = MatchKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_proto_broadage_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchKey) ProtoMessage() {}

func (x *MatchKey) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_proto_broadage_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchKey.ProtoReflect.Descriptor instead.
func (*MatchKey) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_proto_broadage_proto_rawDescGZIP(), []int{2}
}

func (x *MatchKey) GetCompetitionFid() string {
	if x != nil {
		return x.CompetitionFid
	}
	return ""
}

func (x *MatchKey) GetFid() string {
	if x != nil {
		return x.Fid
	}
	return ""
}

// / GetPlayersFromTeamRequest represents the request to get the players from a team.
type GetTeamPlayersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// / Id is the unique identifier of the team.
	TeamFid string `protobuf:"bytes,1,opt,name=team_fid,json=teamFid,proto3" json:"team_fid,omitempty"`
}

func (x *GetTeamPlayersRequest) Reset() {
	*x = GetTeamPlayersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_proto_broadage_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeamPlayersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeamPlayersRequest) ProtoMessage() {}

func (x *GetTeamPlayersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_proto_broadage_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeamPlayersRequest.ProtoReflect.Descriptor instead.
func (*GetTeamPlayersRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_proto_broadage_proto_rawDescGZIP(), []int{3}
}

func (x *GetTeamPlayersRequest) GetTeamFid() string {
	if x != nil {
		return x.TeamFid
	}
	return ""
}

// / GetPlayersFromTeamResponse represents the response to get the players from a team.
type GetTeamPlayersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// / Players is the list of players from the team.
	Players []*TeamPlayer `protobuf:"bytes,1,rep,name=players,proto3" json:"players,omitempty"`
}

func (x *GetTeamPlayersResponse) Reset() {
	*x = GetTeamPlayersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_proto_broadage_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeamPlayersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeamPlayersResponse) ProtoMessage() {}

func (x *GetTeamPlayersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_proto_broadage_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeamPlayersResponse.ProtoReflect.Descriptor instead.
func (*GetTeamPlayersResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_proto_broadage_proto_rawDescGZIP(), []int{4}
}

func (x *GetTeamPlayersResponse) GetPlayers() []*TeamPlayer {
	if x != nil {
		return x.Players
	}
	return nil
}

// / Player represents a player in a game.
type TeamPlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// / fid is the unique id of the player.
	Fid string `protobuf:"bytes,1,opt,name=fid,proto3" json:"fid,omitempty"`
	// / name is the first name of the player.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// / surname is the last name of the player.
	Surname string `protobuf:"bytes,3,opt,name=surname,proto3" json:"surname,omitempty"`
	// / last_name is the last name of the player.
	LastName string `protobuf:"bytes,4,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	// / number is the number of the player.
	Number int32 `protobuf:"varint,5,opt,name=number,proto3" json:"number,omitempty"`
	// / license is the license of the player.
	License string `protobuf:"bytes,6,opt,name=license,proto3" json:"license,omitempty"`
}

func (x *TeamPlayer) Reset() {
	*x = TeamPlayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_proto_broadage_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamPlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamPlayer) ProtoMessage() {}

func (x *TeamPlayer) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_proto_broadage_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamPlayer.ProtoReflect.Descriptor instead.
func (*TeamPlayer) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_proto_broadage_proto_rawDescGZIP(), []int{5}
}

func (x *TeamPlayer) GetFid() string {
	if x != nil {
		return x.Fid
	}
	return ""
}

func (x *TeamPlayer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TeamPlayer) GetSurname() string {
	if x != nil {
		return x.Surname
	}
	return ""
}

func (x *TeamPlayer) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *TeamPlayer) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *TeamPlayer) GetLicense() string {
	if x != nil {
		return x.License
	}
	return ""
}

// / BoxScore represents the box score of a match.
type GetMatchPlayersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// / Id is the unique identifier of the match.
	MatchFid string `protobuf:"bytes,1,opt,name=match_fid,json=matchFid,proto3" json:"match_fid,omitempty"`
}

func (x *GetMatchPlayersRequest) Reset() {
	*x = GetMatchPlayersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_proto_broadage_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchPlayersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchPlayersRequest) ProtoMessage() {}

func (x *GetMatchPlayersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_proto_broadage_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchPlayersRequest.ProtoReflect.Descriptor instead.
func (*GetMatchPlayersRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_proto_broadage_proto_rawDescGZIP(), []int{6}
}

func (x *GetMatchPlayersRequest) GetMatchFid() string {
	if x != nil {
		return x.MatchFid
	}
	return ""
}

// Represents a player.
type MatchPlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The unique identifier of the player.
	Fid string `protobuf:"bytes,1,opt,name=fid,proto3" json:"fid,omitempty"`
	// The player's number.
	Number string `protobuf:"bytes,3,opt,name=number,proto3" json:"number,omitempty"`
	// Indicates if the player is starting the match.
	Start bool `protobuf:"varint,5,opt,name=start,proto3" json:"start,omitempty"`
	// Indicates if the player is the captain of the team.
	Captain bool `protobuf:"varint,6,opt,name=captain,proto3" json:"captain,omitempty"`
}

func (x *MatchPlayer) Reset() {
	*x = MatchPlayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_proto_broadage_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchPlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchPlayer) ProtoMessage() {}

func (x *MatchPlayer) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_proto_broadage_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchPlayer.ProtoReflect.Descriptor instead.
func (*MatchPlayer) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_proto_broadage_proto_rawDescGZIP(), []int{7}
}

func (x *MatchPlayer) GetFid() string {
	if x != nil {
		return x.Fid
	}
	return ""
}

func (x *MatchPlayer) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *MatchPlayer) GetStart() bool {
	if x != nil {
		return x.Start
	}
	return false
}

func (x *MatchPlayer) GetCaptain() bool {
	if x != nil {
		return x.Captain
	}
	return false
}

// / GetMatchPlayersResponse represents the response to get the box score of a match.
type GetMatchPlayersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// / players are the players of the match.
	HomeTeamPlayers []*MatchPlayer `protobuf:"bytes,1,rep,name=home_team_players,json=homeTeamPlayers,proto3" json:"home_team_players,omitempty"`
	// / players are the players of the match.
	AwayTeamPlayers []*MatchPlayer `protobuf:"bytes,2,rep,name=away_team_players,json=awayTeamPlayers,proto3" json:"away_team_players,omitempty"`
}

func (x *GetMatchPlayersResponse) Reset() {
	*x = GetMatchPlayersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_proto_broadage_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchPlayersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchPlayersResponse) ProtoMessage() {}

func (x *GetMatchPlayersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_proto_broadage_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchPlayersResponse.ProtoReflect.Descriptor instead.
func (*GetMatchPlayersResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_proto_broadage_proto_rawDescGZIP(), []int{8}
}

func (x *GetMatchPlayersResponse) GetHomeTeamPlayers() []*MatchPlayer {
	if x != nil {
		return x.HomeTeamPlayers
	}
	return nil
}

func (x *GetMatchPlayersResponse) GetAwayTeamPlayers() []*MatchPlayer {
	if x != nil {
		return x.AwayTeamPlayers
	}
	return nil
}

// / GetPlayByPlayRequest represents the request to get the play by play of a match.
type GetPlayByPlayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// / Id is the unique identifier of the match.
	MatchFid string `protobuf:"bytes,1,opt,name=match_fid,json=matchFid,proto3" json:"match_fid,omitempty"`
}

func (x *GetPlayByPlayRequest) Reset() {
	*x = GetPlayByPlayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_proto_broadage_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayByPlayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayByPlayRequest) ProtoMessage() {}

func (x *GetPlayByPlayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_proto_broadage_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayByPlayRequest.ProtoReflect.Descriptor instead.
func (*GetPlayByPlayRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_proto_broadage_proto_rawDescGZIP(), []int{9}
}

func (x *GetPlayByPlayRequest) GetMatchFid() string {
	if x != nil {
		return x.MatchFid
	}
	return ""
}

// / GetPlayByPlayResponse represents the response to get the play by play of a match.
type GetPlayByPlayResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// / PlayByPlay is the play by play of the match.
	Actions []*MatchAction `protobuf:"bytes,1,rep,name=actions,proto3" json:"actions,omitempty"`
	// / Events is the events of the match.
	Events []*MatchEvent `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *GetPlayByPlayResponse) Reset() {
	*x = GetPlayByPlayResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_proto_broadage_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayByPlayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayByPlayResponse) ProtoMessage() {}

func (x *GetPlayByPlayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_proto_broadage_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayByPlayResponse.ProtoReflect.Descriptor instead.
func (*GetPlayByPlayResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_proto_broadage_proto_rawDescGZIP(), []int{10}
}

func (x *GetPlayByPlayResponse) GetActions() []*MatchAction {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *GetPlayByPlayResponse) GetEvents() []*MatchEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

// Represents an event.
type MatchEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The unique identifier for the event.
	Fid string `protobuf:"bytes,1,opt,name=fid,proto3" json:"fid,omitempty"`
	// period represents the period of the match when the event occurred.
	Period int32 `protobuf:"varint,2,opt,name=period,proto3" json:"period,omitempty"`
	// time is the time when the event occurred.
	Time int32 `protobuf:"varint,3,opt,name=time,proto3" json:"time,omitempty"`
	// The code representing the event.
	Code EventCode `protobuf:"varint,4,opt,name=code,proto3,enum=core.broadage.v1.EventCode" json:"code,omitempty"`
}

func (x *MatchEvent) Reset() {
	*x = MatchEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_proto_broadage_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchEvent) ProtoMessage() {}

func (x *MatchEvent) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_proto_broadage_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchEvent.ProtoReflect.Descriptor instead.
func (*MatchEvent) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_proto_broadage_proto_rawDescGZIP(), []int{11}
}

func (x *MatchEvent) GetFid() string {
	if x != nil {
		return x.Fid
	}
	return ""
}

func (x *MatchEvent) GetPeriod() int32 {
	if x != nil {
		return x.Period
	}
	return 0
}

func (x *MatchEvent) GetTime() int32 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *MatchEvent) GetCode() EventCode {
	if x != nil {
		return x.Code
	}
	return EventCode_EVENT_CODE_UNSPECIFIED
}

// ActorType represents the type of Actor.
type Actor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// fid is the unique identifier of the Actor type.
	Fid string `protobuf:"bytes,1,opt,name=fid,proto3" json:"fid,omitempty"`
	// type is the type of the Actor.
	Type *Actor `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *Actor) Reset() {
	*x = Actor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_proto_broadage_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Actor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Actor) ProtoMessage() {}

func (x *Actor) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_proto_broadage_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Actor.ProtoReflect.Descriptor instead.
func (*Actor) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_proto_broadage_proto_rawDescGZIP(), []int{12}
}

func (x *Actor) GetFid() string {
	if x != nil {
		return x.Fid
	}
	return ""
}

func (x *Actor) GetType() *Actor {
	if x != nil {
		return x.Type
	}
	return nil
}

// MatchEvent represents a single action in a match.
type MatchAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// fid is the unique identifier of the action.
	Fid string `protobuf:"bytes,1,opt,name=fid,proto3" json:"fid,omitempty"`
	// team_fid is the unique identifier of the team that performed the action.
	TeamFid string `protobuf:"bytes,2,opt,name=team_fid,json=teamFid,proto3" json:"team_fid,omitempty"`
	// Actor represents the type of Actor who performed the action.
	Actor *Actor `protobuf:"bytes,3,opt,name=actor,proto3" json:"actor,omitempty"`
	// code represents the code of the action.
	Code ActionCode `protobuf:"varint,4,opt,name=code,proto3,enum=core.broadage.v1.ActionCode" json:"code,omitempty"`
	// sub_code represents the sub-code of the action.
	SubCode ActionSubcode `protobuf:"varint,5,opt,name=sub_code,json=subCode,proto3,enum=core.broadage.v1.ActionSubcode" json:"sub_code,omitempty"`
	// value is the value associated with the action.
	Value int32 `protobuf:"varint,6,opt,name=value,proto3" json:"value,omitempty"`
	// result indicates whether the action was successful or not.
	Result bool `protobuf:"varint,7,opt,name=result,proto3" json:"result,omitempty"`
	// period represents the period of the match when the action occurred.
	Period int32 `protobuf:"varint,8,opt,name=period,proto3" json:"period,omitempty"`
	// time is the descending period ellapse, in milliseconds, when the action occurred.
	Time int32 `protobuf:"varint,9,opt,name=time,proto3" json:"time,omitempty"`
	// sequence is the sequence number of the action in the match.
	Sequence int32 `protobuf:"varint,10,opt,name=sequence,proto3" json:"sequence,omitempty"`
}

func (x *MatchAction) Reset() {
	*x = MatchAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_proto_broadage_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchAction) ProtoMessage() {}

func (x *MatchAction) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_proto_broadage_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchAction.ProtoReflect.Descriptor instead.
func (*MatchAction) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_proto_broadage_proto_rawDescGZIP(), []int{13}
}

func (x *MatchAction) GetFid() string {
	if x != nil {
		return x.Fid
	}
	return ""
}

func (x *MatchAction) GetTeamFid() string {
	if x != nil {
		return x.TeamFid
	}
	return ""
}

func (x *MatchAction) GetActor() *Actor {
	if x != nil {
		return x.Actor
	}
	return nil
}

func (x *MatchAction) GetCode() ActionCode {
	if x != nil {
		return x.Code
	}
	return ActionCode_ACTION_CODE_UNSPECIFIED
}

func (x *MatchAction) GetSubCode() ActionSubcode {
	if x != nil {
		return x.SubCode
	}
	return ActionSubcode_ACTION_SUBCODE_UNSPECIFIED
}

func (x *MatchAction) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *MatchAction) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

func (x *MatchAction) GetPeriod() int32 {
	if x != nil {
		return x.Period
	}
	return 0
}

func (x *MatchAction) GetTime() int32 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *MatchAction) GetSequence() int32 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

var File_api_proto_v1_proto_broadage_proto protoreflect.FileDescriptor

var file_api_proto_v1_proto_broadage_proto_rawDesc = []byte{
	0x0a, 0x21, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x10, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x61,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d,
	0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4e, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x62,
	0x72, 0x6f, 0x61, 0x64, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x4b, 0x65, 0x79, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x22, 0x45, 0x0a, 0x08,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x70,
	0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x66, 0x69, 0x64, 0x22, 0x32, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x74, 0x65, 0x61, 0x6d, 0x5f, 0x66, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x74, 0x65, 0x61, 0x6d, 0x46, 0x69, 0x64, 0x22, 0x50, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x54, 0x65,
	0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x36, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x61,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x22, 0x9b, 0x01, 0x0a, 0x0a, 0x54, 0x65,
	0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x66, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x18, 0x0a,
	0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x22, 0x35, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x66, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x46, 0x69, 0x64, 0x22, 0x67,
	0x0a, 0x0b, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x10, 0x0a,
	0x03, 0x66, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x66, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x61, 0x70, 0x74, 0x61, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x63, 0x61, 0x70, 0x74, 0x61, 0x69, 0x6e, 0x22, 0xaf, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x11, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x74, 0x65, 0x61, 0x6d,
	0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x61, 0x67, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x0f, 0x68,
	0x6f, 0x6d, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x49,
	0x0a, 0x11, 0x61, 0x77, 0x61, 0x79, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x0f, 0x61, 0x77, 0x61, 0x79, 0x54, 0x65,
	0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x22, 0x33, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x50, 0x6c, 0x61, 0x79, 0x42, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x66, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x46, 0x69, 0x64, 0x22, 0x86,
	0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x42, 0x79, 0x50, 0x6c, 0x61, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x34, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x61, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x7b, 0x0a, 0x0a, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x66, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x61, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x22, 0x46, 0x0a, 0x05, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x10, 0x0a,
	0x03, 0x66, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x66, 0x69, 0x64, 0x12,
	0x2b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xcd, 0x02, 0x0a,
	0x0b, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03,
	0x66, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x66, 0x69, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x66, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x46, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x05, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x62, 0x72, 0x6f, 0x61, 0x64, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x6f,
	0x72, 0x52, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x30, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x62, 0x72,
	0x6f, 0x61, 0x64, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x3a, 0x0a, 0x08, 0x73, 0x75,
	0x62, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x62, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x07, 0x73,
	0x75, 0x62, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x2a, 0x77, 0x0a, 0x09,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x56, 0x45,
	0x4e, 0x54, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x43,
	0x4f, 0x44, 0x45, 0x5f, 0x53, 0x4f, 0x4d, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x56, 0x45,
	0x4e, 0x54, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x45, 0x4f, 0x4d, 0x10, 0x02, 0x12, 0x12, 0x0a,
	0x0e, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x4f, 0x51, 0x10,
	0x03, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f,
	0x45, 0x4f, 0x51, 0x10, 0x04, 0x2a, 0xe4, 0x03, 0x0a, 0x0d, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x75, 0x62, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x41, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x53, 0x55, 0x42, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x53, 0x55, 0x42, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x49, 0x4e, 0x5f, 0x41, 0x52, 0x43,
	0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x55, 0x42,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4f, 0x55, 0x54, 0x5f, 0x41, 0x52, 0x43, 0x10, 0x02, 0x12, 0x1d,
	0x0a, 0x19, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x55, 0x42, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x46, 0x52, 0x45, 0x45, 0x5f, 0x54, 0x48, 0x52, 0x4f, 0x57, 0x10, 0x03, 0x12, 0x17, 0x0a,
	0x13, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x55, 0x42, 0x43, 0x4f, 0x44, 0x45, 0x5f,
	0x44, 0x55, 0x4e, 0x4b, 0x10, 0x04, 0x12, 0x24, 0x0a, 0x20, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x53, 0x55, 0x42, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4f, 0x46, 0x46, 0x45, 0x4e, 0x53, 0x49,
	0x56, 0x45, 0x5f, 0x52, 0x45, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x05, 0x12, 0x24, 0x0a, 0x20,
	0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x55, 0x42, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x44,
	0x45, 0x46, 0x45, 0x4e, 0x53, 0x49, 0x56, 0x45, 0x5f, 0x52, 0x45, 0x42, 0x4f, 0x55, 0x4e, 0x44,
	0x10, 0x06, 0x12, 0x20, 0x0a, 0x1c, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x55, 0x42,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x52, 0x45, 0x43, 0x45, 0x49, 0x56, 0x45, 0x5f, 0x42, 0x4c, 0x4f,
	0x43, 0x4b, 0x10, 0x07, 0x12, 0x1f, 0x0a, 0x1b, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53,
	0x55, 0x42, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x52, 0x45, 0x43, 0x45, 0x49, 0x56, 0x45, 0x5f, 0x46,
	0x4f, 0x55, 0x4c, 0x10, 0x08, 0x12, 0x1c, 0x0a, 0x18, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x53, 0x55, 0x42, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x54, 0x45, 0x43, 0x48, 0x4e, 0x49, 0x43, 0x41,
	0x4c, 0x10, 0x09, 0x12, 0x22, 0x0a, 0x1e, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x55,
	0x42, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x53, 0x4d, 0x41,
	0x4e, 0x4c, 0x49, 0x4b, 0x45, 0x10, 0x0a, 0x12, 0x20, 0x0a, 0x1c, 0x41, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x53, 0x55, 0x42, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x44, 0x49, 0x53, 0x51, 0x55, 0x41,
	0x4c, 0x49, 0x46, 0x59, 0x49, 0x4e, 0x47, 0x10, 0x0b, 0x12, 0x18, 0x0a, 0x14, 0x41, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x55, 0x42, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x42, 0x52, 0x41, 0x57,
	0x4c, 0x10, 0x0c, 0x12, 0x1a, 0x0a, 0x16, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x55,
	0x42, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x57, 0x41, 0x50, 0x5f, 0x49, 0x4e, 0x10, 0x0d, 0x12,
	0x1b, 0x0a, 0x17, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x55, 0x42, 0x43, 0x4f, 0x44,
	0x45, 0x5f, 0x53, 0x57, 0x41, 0x50, 0x5f, 0x4f, 0x55, 0x54, 0x10, 0x0e, 0x2a, 0x98, 0x02, 0x0a,
	0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x41,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x53, 0x10, 0x01,
	0x12, 0x14, 0x0a, 0x10, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f,
	0x46, 0x4f, 0x55, 0x4c, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x52, 0x45, 0x43, 0x45, 0x49, 0x56, 0x45, 0x10, 0x03, 0x12,
	0x17, 0x0a, 0x13, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x52,
	0x45, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x04, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x53, 0x53, 0x49, 0x53, 0x54, 0x10, 0x05,
	0x12, 0x18, 0x0a, 0x14, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f,
	0x54, 0x55, 0x52, 0x4e, 0x4f, 0x56, 0x45, 0x52, 0x10, 0x06, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x54, 0x45, 0x41, 0x4c, 0x10,
	0x07, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0x08, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x57, 0x41, 0x50, 0x10, 0x09, 0x12, 0x17,
	0x0a, 0x13, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x54, 0x49,
	0x4d, 0x45, 0x4f, 0x55, 0x54, 0x10, 0x0a, 0x2a, 0x69, 0x0a, 0x09, 0x41, 0x63, 0x74, 0x6f, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x41, 0x43, 0x54, 0x4f, 0x52, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x15, 0x0a, 0x11, 0x41, 0x43, 0x54, 0x4f, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50,
	0x4c, 0x41, 0x59, 0x45, 0x52, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x43, 0x54, 0x4f, 0x52,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x45, 0x41, 0x4d, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10,
	0x41, 0x43, 0x54, 0x4f, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4f, 0x41, 0x43, 0x48,
	0x10, 0x03, 0x32, 0xb9, 0x04, 0x0a, 0x0f, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x61, 0x67, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7d, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76,
	0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x12, 0x27, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x62, 0x72, 0x6f, 0x61, 0x64, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c,
	0x69, 0x76, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x28, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x61, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x12, 0x12, 0x10, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73,
	0x2f, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x89, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61,
	0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x27, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x62, 0x72, 0x6f, 0x61, 0x64, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x28, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x61, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1e, 0x12, 0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x2f, 0x7b,
	0x74, 0x65, 0x61, 0x6d, 0x5f, 0x66, 0x69, 0x64, 0x7d, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x73, 0x12, 0x8d, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x28, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x62, 0x72, 0x6f,
	0x61, 0x64, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x29, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x61, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x2f, 0x7b, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x5f, 0x66, 0x69, 0x64, 0x7d, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x73, 0x12, 0x8a, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x42, 0x79, 0x50,
	0x6c, 0x61, 0x79, 0x12, 0x26, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x62, 0x72, 0x6f, 0x61, 0x64,
	0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x42, 0x79,
	0x50, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x42, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x12, 0x20, 0x2f, 0x76,
	0x31, 0x2f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x2f, 0x7b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x66,
	0x69, 0x64, 0x7d, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x62, 0x79, 0x70, 0x6c, 0x61, 0x79, 0x42, 0x9e,
	0x02, 0x92, 0x41, 0x86, 0x01, 0x12, 0x5d, 0x0a, 0x0c, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x61, 0x67,
	0x65, 0x20, 0x41, 0x50, 0x49, 0x22, 0x46, 0x0a, 0x05, 0x4e, 0x42, 0x4e, 0x32, 0x33, 0x12, 0x2a,
	0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x4e, 0x42, 0x4e, 0x32, 0x33, 0x64, 0x65, 0x76, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2d, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x61, 0x67, 0x65, 0x1a, 0x11, 0x64, 0x65, 0x76, 0x65,
	0x6c, 0x6f, 0x70, 0x40, 0x6e, 0x62, 0x6e, 0x32, 0x33, 0x2e, 0x63, 0x6f, 0x6d, 0x32, 0x05, 0x31,
	0x2e, 0x30, 0x2e, 0x30, 0x2a, 0x01, 0x02, 0x32, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x0a, 0x14, 0x63, 0x6f, 0x6d,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x61, 0x67, 0x65, 0x2e, 0x76,
	0x31, 0x42, 0x12, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x61, 0x67, 0x65,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x06, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0xa2,
	0x02, 0x03, 0x43, 0x42, 0x58, 0xaa, 0x02, 0x10, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x72, 0x6f,
	0x61, 0x64, 0x61, 0x67, 0x65, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x10, 0x43, 0x6f, 0x72, 0x65, 0x5c,
	0x42, 0x72, 0x6f, 0x61, 0x64, 0x61, 0x67, 0x65, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1c, 0x43, 0x6f,
	0x72, 0x65, 0x5c, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x61, 0x67, 0x65, 0x5c, 0x56, 0x31, 0x5c, 0x47,
	0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x12, 0x43, 0x6f, 0x72,
	0x65, 0x3a, 0x3a, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x61, 0x67, 0x65, 0x3a, 0x3a, 0x56, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_v1_proto_broadage_proto_rawDescOnce sync.Once
	file_api_proto_v1_proto_broadage_proto_rawDescData = file_api_proto_v1_proto_broadage_proto_rawDesc
)

func file_api_proto_v1_proto_broadage_proto_rawDescGZIP() []byte {
	file_api_proto_v1_proto_broadage_proto_rawDescOnce.Do(func() {
		file_api_proto_v1_proto_broadage_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_v1_proto_broadage_proto_rawDescData)
	})
	return file_api_proto_v1_proto_broadage_proto_rawDescData
}

var file_api_proto_v1_proto_broadage_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_api_proto_v1_proto_broadage_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_api_proto_v1_proto_broadage_proto_goTypes = []interface{}{
	(EventCode)(0),                  // 0: core.broadage.v1.EventCode
	(ActionSubcode)(0),              // 1: core.broadage.v1.ActionSubcode
	(ActionCode)(0),                 // 2: core.broadage.v1.ActionCode
	(ActorType)(0),                  // 3: core.broadage.v1.ActorType
	(*GetLiveMatchesRequest)(nil),   // 4: core.broadage.v1.GetLiveMatchesRequest
	(*GetLiveMatchesResponse)(nil),  // 5: core.broadage.v1.GetLiveMatchesResponse
	(*MatchKey)(nil),                // 6: core.broadage.v1.MatchKey
	(*GetTeamPlayersRequest)(nil),   // 7: core.broadage.v1.GetTeamPlayersRequest
	(*GetTeamPlayersResponse)(nil),  // 8: core.broadage.v1.GetTeamPlayersResponse
	(*TeamPlayer)(nil),              // 9: core.broadage.v1.TeamPlayer
	(*GetMatchPlayersRequest)(nil),  // 10: core.broadage.v1.GetMatchPlayersRequest
	(*MatchPlayer)(nil),             // 11: core.broadage.v1.MatchPlayer
	(*GetMatchPlayersResponse)(nil), // 12: core.broadage.v1.GetMatchPlayersResponse
	(*GetPlayByPlayRequest)(nil),    // 13: core.broadage.v1.GetPlayByPlayRequest
	(*GetPlayByPlayResponse)(nil),   // 14: core.broadage.v1.GetPlayByPlayResponse
	(*MatchEvent)(nil),              // 15: core.broadage.v1.MatchEvent
	(*Actor)(nil),                   // 16: core.broadage.v1.Actor
	(*MatchAction)(nil),             // 17: core.broadage.v1.MatchAction
}
var file_api_proto_v1_proto_broadage_proto_depIdxs = []int32{
	6,  // 0: core.broadage.v1.GetLiveMatchesResponse.matches:type_name -> core.broadage.v1.MatchKey
	9,  // 1: core.broadage.v1.GetTeamPlayersResponse.players:type_name -> core.broadage.v1.TeamPlayer
	11, // 2: core.broadage.v1.GetMatchPlayersResponse.home_team_players:type_name -> core.broadage.v1.MatchPlayer
	11, // 3: core.broadage.v1.GetMatchPlayersResponse.away_team_players:type_name -> core.broadage.v1.MatchPlayer
	17, // 4: core.broadage.v1.GetPlayByPlayResponse.actions:type_name -> core.broadage.v1.MatchAction
	15, // 5: core.broadage.v1.GetPlayByPlayResponse.events:type_name -> core.broadage.v1.MatchEvent
	0,  // 6: core.broadage.v1.MatchEvent.code:type_name -> core.broadage.v1.EventCode
	16, // 7: core.broadage.v1.Actor.type:type_name -> core.broadage.v1.Actor
	16, // 8: core.broadage.v1.MatchAction.actor:type_name -> core.broadage.v1.Actor
	2,  // 9: core.broadage.v1.MatchAction.code:type_name -> core.broadage.v1.ActionCode
	1,  // 10: core.broadage.v1.MatchAction.sub_code:type_name -> core.broadage.v1.ActionSubcode
	4,  // 11: core.broadage.v1.BroadageService.GetLiveMatches:input_type -> core.broadage.v1.GetLiveMatchesRequest
	7,  // 12: core.broadage.v1.BroadageService.GetTeamPlayers:input_type -> core.broadage.v1.GetTeamPlayersRequest
	10, // 13: core.broadage.v1.BroadageService.GetMatchPlayers:input_type -> core.broadage.v1.GetMatchPlayersRequest
	13, // 14: core.broadage.v1.BroadageService.GetPlayByPlay:input_type -> core.broadage.v1.GetPlayByPlayRequest
	5,  // 15: core.broadage.v1.BroadageService.GetLiveMatches:output_type -> core.broadage.v1.GetLiveMatchesResponse
	8,  // 16: core.broadage.v1.BroadageService.GetTeamPlayers:output_type -> core.broadage.v1.GetTeamPlayersResponse
	12, // 17: core.broadage.v1.BroadageService.GetMatchPlayers:output_type -> core.broadage.v1.GetMatchPlayersResponse
	14, // 18: core.broadage.v1.BroadageService.GetPlayByPlay:output_type -> core.broadage.v1.GetPlayByPlayResponse
	15, // [15:19] is the sub-list for method output_type
	11, // [11:15] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_api_proto_v1_proto_broadage_proto_init() }
func file_api_proto_v1_proto_broadage_proto_init() {
	if File_api_proto_v1_proto_broadage_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_proto_v1_proto_broadage_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLiveMatchesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_proto_broadage_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLiveMatchesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_proto_broadage_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_proto_broadage_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTeamPlayersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_proto_broadage_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTeamPlayersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_proto_broadage_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeamPlayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_proto_broadage_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchPlayersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_proto_broadage_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchPlayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_proto_broadage_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchPlayersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_proto_broadage_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayByPlayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_proto_broadage_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayByPlayResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_proto_broadage_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_proto_broadage_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Actor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_proto_broadage_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_v1_proto_broadage_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_v1_proto_broadage_proto_goTypes,
		DependencyIndexes: file_api_proto_v1_proto_broadage_proto_depIdxs,
		EnumInfos:         file_api_proto_v1_proto_broadage_proto_enumTypes,
		MessageInfos:      file_api_proto_v1_proto_broadage_proto_msgTypes,
	}.Build()
	File_api_proto_v1_proto_broadage_proto = out.File
	file_api_proto_v1_proto_broadage_proto_rawDesc = nil
	file_api_proto_v1_proto_broadage_proto_goTypes = nil
	file_api_proto_v1_proto_broadage_proto_depIdxs = nil
}
